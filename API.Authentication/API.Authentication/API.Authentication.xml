<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API.Authentication</name>
    </assembly>
    <members>
        <member name="T:API.Authentication.Attributes.ValidatorActionFilter">
            <summary>
            Validator action filter
            </summary>
        </member>
        <member name="M:API.Authentication.Attributes.ValidatorActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            On action executing
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:API.Authentication.Attributes.ValidatorActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            After action is executed
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:API.Authentication.Configuration.ConfigurationExtensions">
            <summary>
            Configuration extensions
            </summary>
        </member>
        <member name="M:API.Authentication.Configuration.ConfigurationExtensions.ConfigureCulture(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure culture
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:API.Authentication.Configuration.ConfigurationExtensions.AddSettings(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add settings
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:API.Authentication.Configuration.ConfigurationExtensions.AddCacheServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add cache
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <param name="cacheSettings"></param>
        </member>
        <member name="M:API.Authentication.Configuration.ConfigurationExtensions.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add settings
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:API.Authentication.Configuration.ConfigurationExtensions.AutoMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add auto mapper
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:API.Authentication.Configuration.ConfigurationExtensions.AddDbContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add db context
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:API.Authentication.Controllers.UsersController">
            <summary>
            User controller
            </summary>
        </member>
        <member name="F:API.Authentication.Controllers.UsersController._userService">
            <summary>
            User service
            </summary>
        </member>
        <member name="F:API.Authentication.Controllers.UsersController._mapper">
            <summary>
            Mapper
            </summary>
        </member>
        <member name="M:API.Authentication.Controllers.UsersController.#ctor(Business.Authentication.Interfaces.IUserService,AutoMapper.IMapper)">
            <summary>
            Constructor
            </summary>
            <param name="userService"></param>
            <param name="mapper"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:API.Authentication.Controllers.UsersController.Authenticate(Business.Authentication.Models.AuthenticateRequest)">
            <summary>
            Authenticate
            </summary>
            <param name="authenticate"></param>
            <returns></returns>
        </member>
        <member name="M:API.Authentication.Controllers.UsersController.List(Common.Pagination.Models.PaginationParams)">
            <summary>
            List users
            </summary>
            <param name="pagination"></param>
            <returns></returns>
        </member>
        <member name="M:API.Authentication.Controllers.UsersController.Get(System.Int32)">
            <summary>
            Get user
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:API.Authentication.Controllers.UsersController.Post(API.Authentication.DTO.Users.CreateUserDTO)">
            <summary>
            Create user
            </summary>
            <param name="createUser"></param>
            <returns></returns>
        </member>
        <member name="M:API.Authentication.Controllers.UsersController.Put(System.Int32,API.Authentication.DTO.Users.UpdateUserDTO)">
            <summary>
            Update user
            </summary>
            <param name="id"></param>
            <param name="updateUser"></param>
            <returns></returns>
        </member>
        <member name="M:API.Authentication.Controllers.UsersController.Delete(System.Int32)">
            <summary>
            Delete user
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:API.Authentication.DTO.Users.CreateUserDTO">
            <summary>
            Create user
            </summary>
        </member>
        <member name="P:API.Authentication.DTO.Users.CreateUserDTO.FirstName">
            <summary>
            First name
            </summary>
        </member>
        <member name="P:API.Authentication.DTO.Users.CreateUserDTO.LastName">
            <summary>
            Last name
            </summary>
        </member>
        <member name="P:API.Authentication.DTO.Users.CreateUserDTO.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:API.Authentication.DTO.Users.CreateUserDTO.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="T:API.Authentication.DTO.Users.UpdateUserDTO">
            <summary>
            Update user
            </summary>
        </member>
        <member name="P:API.Authentication.DTO.Users.UpdateUserDTO.FirstName">
            <summary>
            First name
            </summary>
        </member>
        <member name="P:API.Authentication.DTO.Users.UpdateUserDTO.LastName">
            <summary>
            Last name
            </summary>
        </member>
        <member name="P:API.Authentication.DTO.Users.UpdateUserDTO.Status">
            <summary>
            Status
            <para>1: Active</para>
            <para>0: Undefined</para>
            <para>-1: Disabled</para>
            </summary>
        </member>
        <member name="T:API.Authentication.DTO.Users.UserDTO">
            <summary>
            User
            </summary>
        </member>
        <member name="P:API.Authentication.DTO.Users.UserDTO.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:API.Authentication.DTO.Users.UserDTO.FirstName">
            <summary>
            First name
            </summary>
        </member>
        <member name="P:API.Authentication.DTO.Users.UserDTO.LastName">
            <summary>
            Last name
            </summary>
        </member>
        <member name="P:API.Authentication.DTO.Users.UserDTO.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:API.Authentication.DTO.Users.UserDTO.Status">
            <summary>
            Status
            <para>1: Active</para>
            <para>0: Undefined</para>
            <para>-1: Disabled</para>
            </summary>
        </member>
        <member name="P:API.Authentication.DTO.Users.UserDTO.CreateDate">
            <summary>
            Create date
            </summary>
        </member>
        <member name="P:API.Authentication.DTO.Users.UserDTO.UpdateDate">
            <summary>
            Update date
            </summary>
        </member>
        <member name="T:API.Authentication.Mapper.AutoMapperBootstrapper">
            <summary>
            Automapper bootstrapper
            </summary>
        </member>
        <member name="M:API.Authentication.Mapper.AutoMapperBootstrapper.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:API.Authentication.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:API.Authentication.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:API.Authentication.Program.CreateHostBuilder(System.String[])">
            <summary>
            Host builder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:API.Authentication.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:API.Authentication.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:API.Authentication.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:API.Authentication.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:API.Authentication.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Authentication.Validators.User.UpdateDTOValidator">
            <summary>
            Update User DTO validator
            </summary>
        </member>
        <member name="M:API.Authentication.Validators.User.UpdateDTOValidator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:API.Authentication.Validators.User.UserDTOValidator">
            <summary>
            Create User DTO validator
            </summary>
        </member>
        <member name="M:API.Authentication.Validators.User.UserDTOValidator.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
    </members>
</doc>
